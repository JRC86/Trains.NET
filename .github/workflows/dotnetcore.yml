name: Master

on:
  push:
    branches:
    - master

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v1
      with:
        submodules: true
      
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.100

    - name: setup-msbuild
      uses: microsoft/setup-msbuild@v1

    - name: Build with msbuild
      run: msbuild Trains.NET.sln /m /restore /p:Configuration=Release

    - name: Run tests
      run: dotnet test
    
    - name: Zip release
      uses: montudor/action-zip@v0.1.0
      with:
        args: zip -qq ./release.zip ./src/Trains.NET.WPF/bin/Release/
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: Release ${{ github.ref }}
        draft: false
        prerelease: true
        
     -name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./release.zip
          asset_name: release.zip
          asset_content_type: application/zip
